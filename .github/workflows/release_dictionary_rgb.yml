on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:
name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          pip3 install -r requirements.txt
          python3 blockid2rgb.py
          python3 matchcolor.py
          zip -9 dictionary_rgb.json.zip dictionary_rgb.json
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: dictionary_rgb
          release_name: Release dictionary_rgb.json.zip
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: sekwah41/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dictionary_rgb.json.zip
          asset_name: dictionary_rgb.json.zip
          asset_content_type: application/zip
